Coming back from break my main goal has been to get basic garage functionality done and integrate it with the mech actor. The main thing standing in the way of me doing this was a lack of assets to work with, so I requested Cameron to make me some basic low-poly parts to use for testing. However, when we tried to connect the parts together using sockets, we ran into a really strange issue where the child object being attached was being scaled by a factor of 100, which was suboptimal. Cameron found that when importing models from Blender to Unreal, the armature of the model was being scaled by a factor of 100 when it was imported, that scale then being inherited by the child component that became attached to it. Cameron was really awesome in finding a solution to this problem, and now we can import new models with little to no issues.

After successfully getting models imported, I got to work implementing them. I made sure everything displayed correctly in the garage, and once that was done I began implementing the garage into the player character. What I ended up doing was passing a struct to our player class that held all of the selected parts from the garage, and called it ‘ST_MechInstructions’. These instructions were then passed to the mech when it was created, where it would set the appropriate skeletal mesh components. I also got the core piece to rotate to face the enemy target. I also eventually made it so the mech core stopped facing the enemy once it went out of range. 

Next I want to get weapons implemented. While the garage is currently handling legs and cores just fine, I have so far avoided doing work with the weapons. I want to get this implemented so the game gets closer to having this core mechanic of customizing your mech completed.
