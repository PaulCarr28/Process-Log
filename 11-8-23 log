Today I wanted to work on getting our mechs torsos to face their current target. My first approach was to simply rotate the torso component to face the current target by getting the “find look at rotation” node to get the needed rotation. This worked, but only sort of. See, sometimes when assets get put into Unreal, their direction can be off by 90 degrees sometimes, making it so when I set their rotation they’re off by 90 degrees. While I could have hard coded an adjustment to their new rotation, I instead wanted to make a more permanent fix. To do so, I added in an arrow and called that my “orient”. I then made the rest of the torso, such as its actual mesh, a child component of this orient. This allows me to make sure everything is rotating correctly, as I can simply rotate the orient and all of the children components will rotate appropriately. 

With this set up, I also wanted to test making the mechs fire at each other when they are in range. This was pretty simple, just needed to do a check to make sure that we have a target and once we do spawn the projectiles appropriately. I plan on expanding this system to first do a “sight check” using a line cast to make sure there aren’t any obstacles in the way before we shoot. 

There was one issue though, when a mech’s target left their range, they weren’t resetting their target to “none”, but instead continuing to fire at their last known target. This was because I wasn’t resetting my target list at the right time. Whereas before I was only resetting it when I needed to add a target, I realized I needed to reset my list of targets whenever I check for them.	Implementing this fixed the issue.
